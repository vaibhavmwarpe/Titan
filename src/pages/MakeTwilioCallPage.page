<apex:page controller="MakeTwilioCallPageController">
    <script type="text/javascript" src="//static.twilio.com/libs/twiliojs/1.1/twilio.min.js"> </script>
    
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"> </script>
    
    <!--link href="http://static0.twilio.com/packages/quickstart/client.css"
    type="text/css" rel="stylesheet" -->
    
    <script type="text/javascript">
        Twilio.Device.setup("{!token}", {debug: true});
        
        Twilio.Device.ready(function (device) {
            $("#log").text("Ready");
        });
        
        Twilio.Device.error(function (error) {
            $("#log").text("Error: " + error.message);
        });
        
        Twilio.Device.connect(
            
            function (conn) {               
                $("#log").text("Successfully established call");
                
            }
        
        );       
        
        
        Twilio.Device.disconnect(function (conn) {
        
            $("#log").text("Call ended");
            hangupAF();
        });
        
        Twilio.Device.incoming(function (conn) {
            $("#log").text("Incoming connection from " + conn.parameters.From);
            // accept the incoming connection and start two-way audio
            conn.accept();
        });
        
        function callNow() {
            // get the phone number to connect the call to
            params = {"PhoneNumber": "{!phonenumber}"};
            //alert('Calling ... ' + $("#number").val());
            Twilio.Device.connect(params);
        }
        
        function call() {
            // get the phone number to connect the call to
            params = {"PhoneNumber": $("#number").val()};
            //alert('Calling ... ' + $("#number").val());
            Twilio.Device.connect(params);
        }
        function hangup() {
            Twilio.Device.disconnectAll();
            hangupAF();
        }
        
        window.onload = function(){ callNow(); };
    </script>
    <apex:form >
        <apex:actionFunction name="hangupAF" action="{!hangupAction}"/>
    </apex:form>
    
    <button class="call" onclick="call();">
        Call
    </button>
    <button class="hangup" onclick="hangup();">
        Hangup
    </button>    
    Calling... {!recordName}
    <div id="log">Loading Please Wait...</div>    
    
    
</apex:page>